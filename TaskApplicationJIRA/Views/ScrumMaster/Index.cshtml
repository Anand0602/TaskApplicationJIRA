@model TaskApplicationJIRA.ViewModels.ScrumMasterViewModel

@{
    ViewData["Title"] = "Scrum Master Dashboard";
}

<div class="container my-4">
    <div class="card shadow-lg rounded">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Scrum Master Dashboard</h4>
        </div>

        <div class="card-body">

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <h5 class="mb-3">All Tasks</h5>

            <div class="table-responsive">
                <table class="table table-bordered align-middle text-center">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Category</th>
                            <th>Priority</th>
                            <th>Status</th>
                            <th>Assign To</th>
                            <th>Due Date</th>
                            <th>Image</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model.Tasks)
                        {
                            <tr>
                                <td>@task.Title</td>
                                <td>@task.Description</td>
                                <td>@task.CategoryName</td>
                                <td>
                                    @{
                                        var priorityRaw = task.PriorityLevel ?? "";
                                        var priority = priorityRaw.Trim().ToLower();
                                        var badgeClass = priority switch
                                        {
                                            "highest" => "bg-danger",
                                            "high" => "bg-warning text-dark",
                                            "medium" => "bg-primary",
                                            "low" => "bg-info text-dark",
                                            "lowest" => "bg-success",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @badgeClass text-uppercase">@priorityRaw</span>
                                </td>


                                <td>
                                    <span class="badge @(task.Status == "Completed" ? "bg-success" : "bg-warning text-dark")">
                                        @task.Status
                                    </span>
                                </td>
                                <td>
                                    @if (task.AssignedToUserId == null || task.AssignedToUserId == 0)
                                    {
                                        <form asp-action="Assign" method="post" class="d-flex gap-2">
                                            <input type="hidden" name="taskId" value="@task.TaskId" />

                                            <select name="developerId" class="form-select form-select-sm" required>
                                                <option value="" disabled selected>-- Select Developer --</option>
                                                @foreach (var dev in Model.Developers)
                                                {
                                                    <option value="@dev.UserId">@dev.Username</option>
                                                }
                                            </select>
                                            <button type="submit" class="btn btn-sm btn-primary">Assign</button>
                                        </form>
                                    }
                                    else
                                    {
                                        var assignedUser = Model.Developers.FirstOrDefault(u => u.UserId == task.AssignedToUserId);
                                        <span class="badge bg-success">@assignedUser?.Username</span>
                                    }
                                </td>
                                <td>@task.DueDate?.ToString("yyyy-MM-dd")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(task.ImageUrl))
                                    {
                                        <img src="@task.ImageUrl" width="50" class="img-thumbnail"
                                             style="cursor:pointer"
                                             data-bs-toggle="modal"
                                             data-bs-target="#imageModal"
                                             onclick="showImageModal('@task.ImageUrl', '@task.Title')" />
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content shadow-lg">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="imageModalLabel">Task Image Preview</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" class="img-fluid rounded shadow" alt="Task Image" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showImageModal(imageUrl, taskTitle) {
            document.getElementById('modalImage').src = imageUrl;
            document.getElementById('imageModalLabel').textContent = taskTitle;
        }
    </script>
}
